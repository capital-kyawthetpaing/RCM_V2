@model Models.ItemModel
@{
    ViewBag.Title = "ItemManageList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render(Url.Content("~/Content/item_master.css"))
<style>
    .listTable tr th, td {
        text-align: center;
        word-wrap: break-word;
        overflow-wrap: break-word;
    }
</style>

<div id="CmnContents">
    <div id="ComBlock">
        <div class="setListBox inlineSet iconSet iconList">
            <h1>商品情報一覧（商品管理）</h1>
            <div class="itemCmnSetKnr itemCmnSet resetValue searchBox">
                <h2>商品情報一覧検索</h2>
                <div id="Panel1">
                    <table>
                        <tr>
                            <th title="Item Number">
                                商品番号<br>
                                @Html.CheckBoxFor(x => x.chkiv, new
                           {
                               @tabindex = "0"
                           })
                            </th>
                            <td>
                                @Html.TextAreaFor(x => x.ItemCD, new { @tabIndex = 1, onkeydown = "KeyDown(event,this)" })

                            </td>
                            <th title="Brand name">ブランド名</th>
                            <td>
                                @Html.TextBoxFor(x => x.BrandName, new { @tabIndex = 2, onkeydown = "KeyDown(event,this)" })


                            </td>
                            <th title="Catalog information">カタログ情報</th>
                            <td>
                                @Html.TextBoxFor(x => x.CatalogInfo, new { @tabIndex = 3, onkeydown = "KeyDown(event,this)" })
                            </td>
                            <th title="Person in charge">担当者</th>
                            <td>
                                @Html.DropDownListFor(x => x.UserID, new SelectList(Enumerable.Empty<SelectListItem>(), " ", " "), " ", new { id = "UserID", @tabIndex = 4, onkeydown = "KeyDown(event,this)", style = "height: 21px" })
                            </td>
                        </tr>
                        <tr>

                            <th title="SKS status">SKSステータス</th>
                            <td>
                                @{
                                    var listNew2 = new List<SelectListItem>();
                                    listNew2.Add(new SelectListItem { Text = " ", Value = "0" });
                                    listNew2.Add(new SelectListItem { Text = "ページ制作", Value = "1" });
                                    listNew2.Add(new SelectListItem { Text = "期日出品待ち", Value = "2" });
                                    listNew2.Add(new SelectListItem { Text = "出品待ち", Value = "3" });
                                    listNew2.Add(new SelectListItem { Text = "出品済", Value = "4" });
                                }
                                @Html.DropDownListFor(m => m.ItemCD, listNew2, new
                           {
                               @required = "required",
                               @id = "ddlsksstatus",
                               @tabindex = "5",
                               style = "height: 21px"
                           })

                            </td>
                            <th title="Date of approval">承認日</th>
                            <td class="cal">
                                @Html.TextBoxFor(x => x.ItemCD, new { @tabIndex = 6, onkeydown = "KeyDown(event,this)" })

                            </td>
                            <th title="Date of approval">~&nbsp;&nbsp;&nbsp;</th>
                            <td class="cal">
                                @Html.TextBoxFor(x => x.ItemCD, new { @tabIndex = 7, onkeydown = "KeyDown(event,this)" })

                            </td>
                        </tr>

                    </table>

                    <div id="hideBlock">
                        <p>詳細検索</p>
                        <div id="hideBox">
                            <table>
                                <tr>
                                    <th>商品名</th>
                                    <td>
                                        @Html.TextBoxFor(x => x.ItemName, new { @tabIndex = 8, onkeydown = "KeyDown(event,this)" })
                                    </td>
                                    <th>メーカー商品コード</th>
                                    <td>
                                        @Html.TextBoxFor(x => x.ItemCD, new { @tabIndex = 9, onkeydown = "KeyDown(event,this)" })
                                    </td>
                                    <th>仕入先名</th>
                                    <td>
                                        @Html.TextBoxFor(x => x.MakerName, new { @tabIndex = 10, onkeydown = "KeyDown(event,this)" })
                                    </td>
                                    <th>競技名</th>
                                    <td>
                                        @Html.TextBoxFor(x => x.CompetitionName, new { @tabIndex = 11, onkeydown = "KeyDown(event,this)" })
                                    </td>
                                </tr>
                                <tr>
                                    <th>分類名</th>
                                    <td>
                                        @Html.TextBoxFor(x => x.ClassName, new { @tabIndex = 12, onkeydown = "KeyDown(event,this)" })
                                    </td>
                                    <th>特記フラグ</th>
                                    <td>
                                        @Html.DropDownListFor(x => x.SpecialFlagCD, new SelectList(Enumerable.Empty<SelectListItem>(), " ", " "), " ", new { id = "SpecialFlagCD", @tabIndex = 13, onkeydown = "KeyDown(event,this)", style = "height: 21px" })
                                    </td>
                                    <th>予約フラグ</th>
                                    <td>
                                        @Html.DropDownListFor(x => x.ReservationFlagCD, new SelectList(Enumerable.Empty<SelectListItem>(), " ", " "), " ", new { id = "ReservationFlagCD", @tabIndex = 14, onkeydown = "KeyDown(event,this)", style = "height: 21px" })
                                    </td>
                                    <th>年度</th>
                                    <td>
                                        @Html.DropDownListFor(x => x.YearCD, new SelectList(Enumerable.Empty<SelectListItem>(), " ", " "), " ", new { id = "YearCD", @tabIndex = 15, onkeydown = "KeyDown(event,this)", style = "height: 21px" })
                                    </td>
                                </tr>
                                <tr>
                                    <th>シーズン</th>
                                    <td>
                                        @Html.DropDownListFor(x => x.SeasonCD, new SelectList(Enumerable.Empty<SelectListItem>(), " ", " "), " ", new { id = "SeasonCD", @tabIndex = 16, onkeydown = "KeyDown(event,this)", style = "height: 21px" })
                                    </td>
                                    <th>ショップ<br />ステータス</th>
                                    <td>
                                        @{
                                            var listNew = new List<SelectListItem>();
                                            listNew.Add(new SelectListItem { Text = " ", Value = "0" });
                                            listNew.Add(new SelectListItem { Text = "未掲載", Value = "n" });
                                            listNew.Add(new SelectListItem { Text = "掲載中", Value = "u" });
                                            listNew.Add(new SelectListItem { Text = "掲載無", Value = "g" });
                                            listNew.Add(new SelectListItem { Text = "倉庫", Value = "w" });
                                            listNew.Add(new SelectListItem { Text = "エラー", Value = "e" });
                                            listNew.Add(new SelectListItem { Text = "削除", Value = "d" });
                                            listNew.Add(new SelectListItem { Text = "削・無のぞく", Value = "nu" });
                                        }
                                        @Html.DropDownListFor(m => m.ItemCD, listNew, new
                                   {
                                       @required = "required",
                                       @id = "ddlYear",
                                       @tabindex = "17",
                                       style = "height: 21px"
                                   })
                                    </td>
                                    <th>備考</th>
                                    <td>
                                        @Html.TextBoxFor(x => x.ItemCD, new { @tabIndex = 18, onkeydown = "KeyDown(event,this)" })
                                    </td>
                                    <th>JANコード</th>
                                    <td>
                                        @Html.TextBoxFor(x => x.MakerCD, new { @tabIndex = 19, onkeydown = "KeyDown(event,this)" })

                                    </td>
                                </tr>
                                <tr>

                                    <th>販売管理コード </th>
                                    <td>
                                        @Html.TextBoxFor(x => x.ItemCD, new { @tabIndex = 20, onkeydown = "KeyDown(event,this)" })
                                    </td>
                                    <th>指示書番号</th>
                                    <td>
                                        @Html.TextBoxFor(x => x.ItemCD, new { @tabIndex = 21, onkeydown = "KeyDown(event,this)" })
                                    </td>
                                </tr>
                            </table>


                        </div>
                    </div>

                    <p>
                        <input type="button" id="btnsearch" value="検 索" />
                    </p>
                </div>
            </div>

            <div class="widthhMax iconEx operationBtn">
                <p>
                    <input type="button" id="btnselectall" value="全て選択" />
                </p>
                <p>
                    <input type="button" id="btncancelall" value="全て解除" />
                </p>
                <p>
                    <input type="button" id="btnexhibition" value="出品" />
                </p>
                <p>
                    <input type="button" id="btnwarehouse" value="倉庫" />
                </p>
                <p>
                    <input type="button" id="btndelete" runat="server" value="削除" ToolTip="Delete" Visible="false" />
                </p>

                <p>
                    ダウンロード項目
                    @Html.DropDownListFor(x => x.exportFieldsModel.AutoID, new SelectList(Enumerable.Empty<SelectListItem>(), " ", " "), " ", new { id = "AutoID", @tabIndex = 22, onkeydown = "KeyDown(event,this)" })
                <p>
                    <input type="button" id="btnGenerate" value="エクスポート" ToolTip="Export" />
                </p>

            </div>
            <div class="resetValue editBox">
                <table class="listTable" id="tbItemManage" style="width:100%;">
                    <thead>
                        <tr>
                            <th width="4%"></th>
                            <th width="3%"></th>
                            <th>商品番号</th>
                            <th>商品名</th>
                            <th>定価</th>
                            <th>販売価格</th>
                            <th>原価</th>
                            <th>原価率</th>
                            <th>割引率</th>
                            <th></th>
                            <th>ショップページ</th>
                            <th>掲載可能日</th>
                            <th>発売日</th>
                            <th>仕入先名</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div id="divSKU" style="display:none">
    @Html.Partial("~/Views/Search/SKUView.cshtml")
</div>



@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {

            
            BindUser();
            BindSpecialFlag();
            BindReservationFlag();
            BindYear();
            BindSeason();
            BindExportField();
            //BindItemManageTable();
            setTimeout(function () { BindItemManageTable(); }, 100);

            $("#SKUViewModal").iziModal({
                width: "70%",
                headerColor: "#307D7E"
            });

            $('#hideBlock p').on('click', function () {
                var hiddenbox = $(this).closest('#hideBlock p');
                if (this.hidden) {
                    // This row is already open - close it
                    $(this).next().slideToggle();
                    $(this).removeClass("active");
                }
                else {
                    // Open this row
                    $(this).next().slideToggle();
                    $(this).toggleClass("active");
                }
            });

            $("#btnsearch").click(function()
            {
                BindItemManageTable();
            });

            $("#btnGenerate").click(function () {
                var obj = {
                    Type: '2',
                    ExportID: $("#AutoID").val(),
                    ItemCD: $("#ItemCD").val(),
                    BrandName: $("#BrandName").val(),
                    ItemName: $("#ItemName").val(),
                    MakerCD: $("#MakerCD").val(),
                    MakerName: $("#MakerName").val(),
                    YearCD: $("#YearCD").val(),
                    SeasonCD: $("#SeasonCD").val(),
                    CatalogInfo: $("#CatalogInfo").val(),
                    ClassName: $("#ClassName").val(),
                    CompetitionName: $("#CompetitionName").val(),
                };
                var response = CalltoApiController('@Url.Action("ItemManage_List", "api/ItemApi")', obj);
                var items = JSON.parse(response); 

                var today = new Date();
                var dd = String(today.getDate()).padStart(2, '0');
                var mm = String(today.getMonth() + 1).padStart(2, '0'); 
                var yyyy = today.getFullYear();

                today = yyyy + mm + dd;
                ExportToExcel(items, "商品情報_" + today + ".xlsx","Sheet1");
            });


            $('#tbItemManage tbody').on('click', 'td.details-control', function () {
                var tr = $(this).closest('tr');
                var row = table.row(tr);

                if (row.child.isShown()) {
                    // This row is already open - close it
                    row.child.hide();
                    tr.removeClass('shown');
                }
                else {
                    // Open this row
                    row.child(format(row.data())).show();
                    tr.addClass('shown');
                }
            });

            //BindItemManageTable();


            var oTable = $('#tbItemManage').dataTable({
                stateSave: true,
                destroy: true,
                "dataSrc": " ",
                "searching": false,
                "ordering": false,
            });

            $("#btnselectall").click(function () { 
                oTable.$(".itemchk").prop('checked', true).attr('checked', 'checked');
            });
            $("#btncancelall").click(function () {
                oTable.$(".itemchk").prop('checked', false).attr('checked', false);
            });

        });

        function BindUser() {
            var obj = {
                UserID: null,
            };
            BindDropdown('UserID','UserID','UserName','@Url.Action("User_Select", "api/UserApi")', obj);
        }

        function BindSpecialFlag() {
            BindDropdown('SpecialFlagCD', 'SpecialFlagCD','SpecialFlagName','@Url.Action("SpecialFlag_Select", "api/ItemApi")');
        }

        function BindReservationFlag() {
            BindDropdown('ReservationFlagCD', 'ReservationFlagCD','ReservationFlagName','@Url.Action("ReservationFlag_Select", "api/ItemApi")');
        }

        function BindYear() {
            BindDropdown('YearCD', 'YearCD','Year','@Url.Action("Year_Select", "api/MultiApi")');
        }

        function BindSeason() {
            BindDropdown('SeasonCD', 'SeasonCD','Season','@Url.Action("Season_Select", "api/MultiApi")');
        }

        function BindExportField() {
            var obj = {
                ExportType: "01",
            };
            BindDropdown('AutoID', 'AutoID', 'ExportName', '@Url.Action("ExportField_Select", "api/ShopApi")', obj);
        }

        function BindItemManageTable() {
            var obj = {
                Type: '1',
                ItemCD: $("#ItemCD").val(),
                BrandName: $("#BrandName").val(),
                ItemName: $("#ItemName").val(),
                MakerCD: $("#MakerCD").val(),
                MakerName: $("#MakerName").val(),
                YearCD: $("#YearCD").val(),
                SeasonCD: $("#SeasonCD").val(),
                CatalogInfo: $("#CatalogInfo").val(),
                ClassName: $("#ClassName").val(),
                CompetitionName: $("#CompetitionName").val(),
                };
                var response = CalltoApiController('@Url.Action("ItemManage_List", "api/ItemApi")', obj);
            table = $('#tbItemManage').DataTable({
                data: JSON.parse(response),
                destroy: true,
                "dataSrc": " ",
                "searching": false,
                "ordering": false,
                //"scrollX": true,
                "createdRow": function (row, data, dataIndex) {
                    $(row).addClass("itemchk");
                },
                "columns": [
                    {
                        "className": 'details-control',
                        "orderable": false,
                        "data": null,
                        "defaultContent": ''
                    },
                    {},
                    { "data": "ItemCD"},
                    { "data": "ItemName"},
                    { "data": "ListPrice" },
                    { "data": "SalePrice" },
                    { "data": "Cost" },
                    { "data": "CostRate"},
                    { "data": "DistcountRate" },
                    { "data": "ItemCD" },
                    { "data": "ItemCD" },
                    { "data": "AvailableDate"},
                    { "data": "ReleaseDate"},
                    { "data": "MakerName"},
                ],
                "columnDefs": [
                    {
                        "targets": 1,
                        "className": 'itemchk',
                        "data": "",
                        "render": function (data, type, row) {

                            return '<input type="checkbox" class="itemchk" value="' + row.ItemCD + '" >';

                        }
                    },
                    {
                        "targets": [4, 5, 6, 7, 8],
                        "className": 'textAlign',
                    },
                    {
                        "targets": 4,
                        "data": "ListPrice",
                        "render": function (data, type, row) {
                            return data + '<br/>(' + row['ListPrice1'] + ')';
                        }
                    },
                    {
                        "targets": 5,
                        "data": "SalePrice",
                        "render": function (data, type, row) {
                            return data + '<br/>(' + row['SalePrice1'] + ')';
                        }
                    },
                    {
                        "targets": 6,
                        "data": "Cost",
                        "render": function (data, type, row) {
                            return data + '<br/>(' + row['Cost1'] + ')';
                        }
                    },
                    {
                        "targets": 9,
                        "data": "ItemCD",
                        "render": function (data) {
                            return '<input type="button" style="width:70px;" onclick="ShowSKUView(\'' + data + '\')" value="SKU表示">';
                        }
                    },
                    {
                        "targets": 10,
                        "data": "ItemCD",
                        "render": function (data, type, row) {
                            var jsonData = JSON.parse(row.TargetShop);
                            var $select = $("<select></select>", {
                            });
                            var $option = $("<option></option>", { "text": 'ショップ選択', "value": '0' });
                            $select.append($option);

                            $.each(jsonData, function (x, y) {
                                var keys = Object.keys(y);
                                if (!x) {
                                    keys.forEach(function (key) {
                                        if (key != "ItemCD" && y[key] != '') {
                                            var $option = $("<option></option>", { "text": y[key], "value": key });
                                            $select.append($option);
                                        }
                                    });
                                }
                            });
                            return $select.prop("outerHTML");
                        }
                    }
                ]
            });
        }

        function ShowSKUView(itemCD) {
            $('#divSKU').show();
            BindSKU(itemCD);
            $('#SKUViewModal').iziModal('open');
        }

        function format(d) {
            // `d` is the original data object for the row
            return '<table style="margin-left:2%">' +
                '<tr>' +
                '<th>年度</th>' +
                '<th>シーズン</th>' +
                '<th>競技名</th>' +
                '<th>分類名</th>' +
                '<th>ブランド名</th>' +
                '<th>カタログ情報</th>' +
                '</tr>'+
                '<tbody>' +
                '<tr>' +
                '<td>' + d.Year + '</td>' +
                '<td>' + d.Season + '</td>' +
                '<td>' + d.CompetitionName + '</td>' +
                '<td>' + d.ClassName + '</td>' +
                '<td>' + d.BrandName + '</td>' +
                '<td>' + d.CatalogInfo + '</td>' +
                '</tbody>'
                '</table>';
        }
    </script>
}

<script type="text/javascript" src="//unpkg.com/xlsx/dist/xlsx.full.min.js"></script>

