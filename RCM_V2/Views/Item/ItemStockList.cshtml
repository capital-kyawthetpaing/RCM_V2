@model Models.ItemModel
@{
    ViewBag.Title = "ItemStockList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render(Url.Content("~/Content/itemStockList.css"))

<div id="CmnContent">
    <div id="ComBlock">
        <div class="setListBox inlineSet iconSet iconList">
            <h1>在庫一覧</h1>
            <div class="itemCmnSetKnr itemCmnSet resetValue searchBox">
                <p style="text-align: left; padding: 10px; font-weight: bold; font-size: 15px">在庫検索</p>
                <div id="Panel1">
                    <table>
                        <tr>
                            <th title="Item Number">
                                商品番号<br>
                                @Html.CheckBoxFor(x => x.chkiv, new { @tabIndex = 0})
                                @Html.Label("完全")

                            </th>
                            <td>
                                @Html.TextAreaFor(x => x.ItemCD, new { @tabIndex = 1, onkeydown = "KeyDown(event,this)" })

                            </td>
                            <th title="Item code">メーカー<br />商品コード</th>
                            <td>
                                @Html.TextBoxFor(x => x.MakerCD, new { @tabIndex = 2, onkeydown = "KeyDown(event,this)" })


                            </td>
                            <th title="Shop Name">商品名</th>
                            <td>
                                @Html.TextBoxFor(x => x.ItemName, new { @tabIndex = 3, onkeydown = "KeyDown(event,this)" })
                            </td>
                            <th title="Catalog Information">カタログ情報</th>
                            <td>
                                @Html.TextBoxFor(x => x.CatalogInfo, new { @tabIndex = 4, onkeydown = "KeyDown(event,this)" })
                            </td>
                        </tr>
                        <tr>
                            <th title="Brand Name">ブランド名</th>
                            <td>
                                @Html.TextBoxFor(x => x.BrandName, new { @tabIndex = 5, onkeydown = "KeyDown(event,this)" })
                            </td>
                            <th title="Competition Name">競技名</th>
                            <td>
                                @Html.TextBoxFor(x => x.CompetitionName, new { @tabIndex = 6, onkeydown = "KeyDown(event,this)" })
                            </td>
                            <th title="Year">年度</th>
                            <td>
                                @Html.DropDownListFor(x => x.YearCD, new SelectList(Enumerable.Empty<SelectListItem>(), " ", " "), " ", new { id = "YearCD", @tabIndex = 7, onkeydown = "KeyDown(event,this)" })
                            </td>
                            <th title="Season">シーズン</th>
                            <td>
                                @Html.DropDownListFor(x => x.SeasonCD, new SelectList(Enumerable.Empty<SelectListItem>(), " ", " "), " ", new { id = "SeasonCD", @tabIndex = 8, onkeydown = "KeyDown(event,this)" })
                            </td>
                        </tr>
                        <tr>
                            <th title="JAN Code">JANコード</th>
                            <td>
                                @Html.TextBoxFor(x => x.JanCD, new {@tabIndex = 9, onkeydown = "KeyDown(event,this)" })
                            </td>
                        </tr>

                    </table>
                </div>
                <p>
                    <input type="button" id="btnsearch" value="検 索" />
                </p>
            </div>
        </div>

    </div>
</div>


<div class="userCmnSet resetValue editBox">
    <table class="listTable" id="tbItemStock">
        <thead>
            <tr>
                <th>商品番号</th>
                <th>サイズコード</th>
                <th>カラーコード</th>
                <th>商品名</th>
                <th>サイズ</th>
                <th>カラー</th>
                <th>在庫数</th>
                <th>自社在庫数</th>
                <th>更新日時</th>
                <th>定価</th>
                <th>販売価格</th>
                <th>原価	</th>
                <th>競技名	</th>
                <th>年度	</th>
                <th>シーズン	</th>
                <th>JANコード</th>

            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            BindYear();
            BindSeason();
            Search();
            $("#btnsearch").click(function () {
                Search();
            })

        });

        function Search() {
            var obj = {
                JanCD: $("#JanCD").val(),
                ItemCD: $("#ItemCD").val(),
                ItemName: $("#ItemName").val(),
                YearCD: $("#YearCD").val(),
                SeasonCD: $("#SeasonCD").val(),
                CompetitionName: $("#CompetitionName").val()
            };

                var response = CalltoApiController('@Url.Action("SKU_Stock_Select", "api/ItemApi")', obj);
                BindItemStockListTable(response);
        }
        function BindItemStockListTable(response) {
            table = $('#tbItemStock').DataTable({
                data: JSON.parse(response),
                destroy: true,
                "dataSrc": " ",
                "ordering":false,
                "searching": false,
                "columns": [
                    { "data": "ItemCD" },
                    { "data": "SizeCD" },
                    { "data": "ColorCD" },
                    { "data": "ItemName" },
                    { "data": "SizeName" },
                    { "data": "ColorName" },
                    { "data": "Qty" },
                    { "data": "JishaQty" },
                    { "data": "UpdatedDate" },
                    { "data": "ListPrice" },
                    { "data": "SalePrice" },
                    { "data": "Cost" },
                    { "data": "CompetitionName" },
                    { "data": "Year" },
                    { "data": "Season" },
                    { "data": "JanCD" },
                ],
                "columnDefs": [{
                    "targets": 6,
                    "data": "Qty",
                    "render": function (data) {
                        return '<input type="text" style="width:70px;margin:3px;text-align:right;" value="' + data+'">';
                    }
                },
                    {
                        "targets": 7,
                        "data": "JishaQty",
                        "render": function (data) {
                            return '<input type="text" style="width:70px;margin:3px;text-align:right;" value="' + data +'"/>';
                        },

                }]
            });
        }

        function BindYear() {
            var response = CalltoApiController('@Url.Action("Year_Select", "api/MultiApi")');
            var items = JSON.parse(response);

            $.each(items, function (i, item) {

                var YearCD = item.YearCD;
                $("#YearCD").append(
                    $('<option></option>').val(YearCD).html(item.Year));
            });
            $('#YearCD option:first-child').attr("selected", "selected");
        }

        function BindSeason() {
            var response = CalltoApiController('@Url.Action("Season_Select", "api/MultiApi")');
            var items = JSON.parse(response);

            $.each(items, function (i, item) {

                var SeasonCD = item.SeasonCD;
                $("#SeasonCD").append(
                    $('<option></option>').val(SeasonCD).html(item.Season));
            });
            $('#SeasonCD option:first-child').attr("selected", "selected");
        }



    </script>
}


