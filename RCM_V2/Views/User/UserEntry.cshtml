@model Models.UserModel
@{
    ViewBag.Title = "UserEntry";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render(Url.Content("~/Content/user.css"))

<div id="CmnContents">
    <div id="ComBlock">
        <!-- User search -->
        <div id="edi" class="setDetailBox confSet iconSet iconCheck d-none">
            <h1>ユーザ編集確認画面</h1>
        </div>
        <div id="reg_Confirm" class="setDetailBox confSet iconSet iconCheck d-none">
            <h1>ユーザ登録 確認画面</h1>
        </div>
        <div id="regi" class="setDetailBox iconSet iconEdit d-none">
            <h1 id="head"></h1>
        </div>
        <div class="setDetailBox confSet iconSet iconCheck" id="divUser">
            <table class="userCmnSet editTable">
                <tbody>
                    <tr>
                        <th>ユーザ名&nbsp;<span>※必須</span></th>
                        <td>
                            @Html.TextBoxFor(x => x.UserName, new { @required = true, @tabIndex = 1, onkeydown = "KeyDown(event,this)" })
                        </td>
                    </tr>
                    <tr>
                        <th>ID&nbsp;<span>※必須</span></th>
                        <td>
                            @Html.TextBoxFor(x => x.UserID, new { @autocomplete = "off", @tabIndex = 2, onkeydown = "KeyDown(event,this)" })
                        </td>
                    </tr>
                    <tr>
                        <th>パスワード&nbsp;<span>※必須</span></th>
                        <td>
                            @Html.TextBoxFor(x => x.Password, new { @type = "password", @autocomplete = "off", @tabIndex = 3, onkeydown = "KeyDown(event,this)" })
                        </td>
                    </tr>
                    <tr>
                        <th>ユーザステータス</th>
                        <td>
                            <input type="radio" id="rdostatus" value="1" name="rbdStatus" checked /><label for="rdostatus">有効</label>
                            <input type="radio" id="rdostatus1" value="0" name="rbdStatus" /><label for="rdostatus1">無効</label>
                        </td>
                    </tr>
                    <tr>
                        <th></th>
                        <td>
                            <div>
                                <table cellspacing="0" id="tblUserEntry" style="border-collapse:collapse;">
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="btn">
            <div class="userRole">
                <input type="button" id="btnback" value="戻る" Style="margin-bottom: 30px;width:100px;height:25px;" />
                <input type="button" id="btnPrevious" value="戻る" class="d-none" Style="width:100px;" />
                <input type="button" id="btnSave" value="確認画面へ" style="width: 100px" />
                <input type="button" id="btnConfirm_Save" value="確認画面へ" onclick="ConfirmSave()" class="d-none" Style="width:100px;" />
            </div>
        </div>
    </div>
</div>


@section Scripts
{
    <script type="text/javascript">
        $(document).ready(function () {

            $('#UserName').select();

        if ('@Model.Mode' == "New")
        {
            //check required field
            RequiredCheck($("#UserName"));
            RequiredCheck($("#UserID"));
            RequiredCheck($("#Password"));

           //check user exists or not
            AlreadyExistsCheck('@Url.Action("User_ExistCheck", "api/UserApi")', $("#UserID"),'','');

            $("#head").text('ユーザ登録');
            $("#regi").removeClass('d-none');
        }
        else if('@Model.Mode'=="Edit")
        {
            RequiredCheck($("#UserName"));
            RequiredCheck($("#Password"));

            $("#UserID").prop('readonly', true);
            $("#head").text('ユーザ編集');
            $("#regi").removeClass('d-none');

            //check radio based on Deleteflag
            if ('@Model.Status' == "有効") {
                $("#rdostatus").attr('checked', true);
            }
            else {
                $("#rdostatus1").attr('checked', true);
            }
        }

          //to input for save confirm
          $("#btnSave").click(function()
          {
              var res = ErrorCheckOnClick('divUser');
              if (res == "0") {
                  if ('@Model.Mode' == "New") {

                      $("#btnConfirm_Save").val("登録");
                      $("#reg_Confirm").removeClass('d-none');
                  }
                  else {
                      $("#btnConfirm_Save").val("確認");
                      $("#edi").removeClass('d-none');
                  }
                  $("#regi").addClass('d-none');
                  $("#btnPrevious").removeClass('d-none');
                  $("#btnSave").addClass('d-none');
                  $("#btnConfirm_Save").removeClass('d-none');
                  $("#btnback").addClass('d-none');
                  $('.userCmnSet :input').attr('disabled', true);
              }
              else {
                  ShowMessage(res);
              }
         });

         $("#btnPrevious").click(function()
         {
            $("#edi").addClass('d-none');
            $("#reg_Confirm").addClass('d-none');
            $("#regi").removeClass('d-none');
            $("#btnSave").removeClass('d-none');
            $("#btnback").removeClass('d-none');
            $("#btnPrevious").addClass('d-none');
            $("#btnConfirm_Save").addClass('d-none');
             $('.userCmnSet :input').removeAttr('disabled', true);
             if ('@Model.Mode' == "Edit") {
                 $("#UserID").prop('disabled', true);
             }
         });

            // go to user List
            $("#btnback").click(function(){
               window.location.href='@Url.Action("UserList","User")';
            });

            BindView();
        });

        //save user data
        function ConfirmSave() {
            var userModel = {
                UserID: $("#UserID").val(),
                UserName: $("#UserName").val(),
                Password: $("#Password").val(),
                Status: $("input[name='rbdStatus']:checked").val(),
                Mode: '@Model.Mode',
                CreatedBy: $("#lblUser").text(),
                UpdatedBy: $("#lblUser").text(),
                UserView: []
            };

            $.each($("#tblUserEntry input[type=checkbox]:checked"), function () {
                if($(this).attr("name") != '')
                    userModel.UserView.push($(this).attr("id"));
            });

            var result = CalltoApiController("/api/UserApi/User_Save",userModel);
            if (result=="true") {
                ShowMessage("I101","SaveOK");
            }
            else {
                 $("#UserName").focus();
                ShowMessage("E001");
            }
        }

        function SaveOK() {
            window.location.href = '@Url.Action("UserList","User")';
        }

        function BindView() {
            var obj = {
                UserID:'@Model.UserID',
                ViewID: "",
            };
            var response = CalltoApiController('@Url.Action("View_Select", "api/UserApi")', obj);
            var items = JSON.parse(response);
            var ViewGroupID = '0';
            var row = '';
            
            $.each(items, function (i, item) {
               
                if ('@Model.Mode' == "New") {

                    //if different group, add group title
                    if (item.ViewGroupID != ViewGroupID) {
                        row = '<tr><td class="userRoleHeader"><input id="' + item.ViewGroupID + '" class="userRole" type="checkbox" onChange="CheckView(this);"><label for="' + item.ViewGroupID + '">' + item.ViewGroupName + '</label></td></tr>';
                        $("#tblUserEntry tbody").append(row);
                    }
                    row = '<tr><td><input id="' + item.ViewID + '" name="' + item.ViewGroupID + '" class="userRoleChild" type="checkbox"  onChange="CheckView(this);"/><label for="' + item.ViewID + '">' + item.ViewName + '</label></td></tr>';
                }
                else {
                    
                    //if different group, add group title
                    if (item.ViewGroupID != ViewGroupID) {
                        const groupCount = items.filter((obj) => obj.ViewGroupID === item.ViewGroupID).length;
                        const statusCount = items.filter((obj) => obj.CheckStatus == "1" && obj.ViewGroupID === item.ViewGroupID).length;
                        var gcheck = "";
                        // group checkbod check or not
                        if (groupCount == statusCount)
                            gcheck = "checked";

                        //if (groupCount)
                        row = '<tr><td class="userRoleHeader"><input id="' + item.ViewGroupID + '" class="userRole" type="checkbox" ' + gcheck +' onChange="CheckView(this);"><label for="' + item.ViewGroupID + '">' + item.ViewGroupName + '</label></td></tr>';                       
                        $("#tblUserEntry tbody").append(row);
                    }

                    //check child status checked or not
                    var childcheck = "";
                    if (item.CheckStatus == "1") {
                        childcheck = "checked";
                    }
                    row = '<tr><td><input id="' + item.ViewID + '" name="' + item.ViewGroupID + '" class="userRoleChild" type="checkbox" ' + childcheck +' onChange="CheckView(this);"/><label for="' + item.ViewID + '">' + item.ViewName + '</label></td></tr>';
                    
                }

                $("#tblUserEntry tbody").append(row);
                ViewGroupID = item.ViewGroupID;
            });
        }

        function CheckView(ele) {
            var clsName = $(ele).attr('class');           
           
            //check or not child based on parent checkbox
            if (clsName == "userRole") {
                var id = $(ele).attr('id');
                $('input[name="' + id + '"]').prop('checked', ele.checked);
            }
            //check or not parent based on child
            else {
                var name = $(ele).attr('name');
                var chkCount = $("input[name='" + name + "']:checked").length;
                var total = $("input[name='" + name + "']").length;               
                if (chkCount == total)
                    $("#" + name).prop('checked', true);
                else
                    $("#" + name).prop('checked', false);
            }
        }
    </script>
}



