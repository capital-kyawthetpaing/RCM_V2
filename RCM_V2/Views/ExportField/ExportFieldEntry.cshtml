@using Models;
@model Models.ExportFieldsModel
@{
    ViewBag.Title = "ExportFieldEntry";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ExportFieldInfo info = new ExportFieldInfo();
    info.ID = Model.AutoID;
    info.ExportValueID = Model.ExportValueID;
    info.ControlID = "ExportValue";
}
<style>
    /*drag and drop table hover class*/
    .sortable-dragging {
        background-color: green;
        color: white;
    }
</style>


<div id="CmnContents">
    <div id="ComBlock">
        <div id="edi" class="setDetailBox confSet iconSet iconCheck d-none">
            <h1>エクスポート定義 編集確認画面</h1>
        </div>
        <div id="reg_Confirm" class="setDetailBox confSet iconSet iconCheck d-none">
            <h1>エクスポート定義 登録 確認画面</h1>
        </div>
        <div id="regi" class="setDetailBox iconSet iconEdit d-none">
            <h1 id="head"></h1>
        </div>
        <div class="setDetailBox confSet iconSet iconCheck" id="divExportEntry">
            <table class="userCmnSet editTable">
                <tbody>
                    <tr>
                        <th>ステータス</th>
                        <td>
                            <input type="radio" id="rdostatus" value="1" name="rbdStatus" checked tabindex="1" onkeydown="KeyDown(event,this)" /><label for="rdostatus">有効</label>
                            <input type="radio" id="rdostatus1" value="0" name="rbdStatus" tabindex="1" /><label for="rdostatus1">無効</label>
                        </td>
                    </tr>
                    <tr>
                        <th>
                            定義名&nbsp;<span>※必須</span>
                        </th>
                        <td>
                            @Html.TextBoxFor(x => x.ExportName, new { @tabindex = "2", onkeydown = "KeyDown(event,this)" })
                        </td>
                    </tr>
                    <tr>
                        <th>ダウンロード項目&nbsp;<span>※必須</span></th>
                        <td>
                            <div class="operationBtn">
                                <p>
                                    <input type="button" value="項目を選択する" onclick="ExportColumnClick()" tabindex="3" />
                                    <input type="button" id="btnExportOrder" value="優先順設定" onclick="OrderColumnClick()" tabindex="4" disabled />
                                </p>
                            </div>
                            <br />
                            @Html.TextAreaFor(x => x.ExportValue, new { @autocomplete = "off", @disabled = "disabled", onkeydown = "KeyDown(event,this)" })
                            @Html.HiddenFor(x => x.AutoID)
                            @Html.HiddenFor(x => x.ExportValueID)
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="btn">
            <div class="userRole">
                <input type="button" id="btnback" value="戻る" Style="margin-bottom: 30px;width:100px;height:25px;" />
                <input type="button" id="btnPrevious" value="戻る" class="d-none" Style="width:100px;" />
                <input type="button" id="btnSave" value="確認画面へ" style="width: 100px" tabindex="5" />
                <input type="button" id="btnConfirm_Save" value="確認画面へ" onclick="ConfirmSave()" class="d-none" Style="width:100px;" />
            </div>
        </div>
    </div>
</div>

@Html.Partial("~/Views/Search/ExportColumnList.cshtml", info)
@Html.Partial("~/Views/Search/OrderColumnList.cshtml")


@section Scripts
{
    <script type="text/javascript">
        var exportListarr = [];
        var ExportValue;
        var ExportValID;
        var ExpValueStr = "";
        var ExpValueIDStr = "";
        var exportValueIDArr = [];
        var exportValueArr = [];
        $(document).ready(function () {            
            $("#rdostatus").select();
            //check required field
            RequiredCheck($("#ExportName"));
            RequiredCheck($("#ExportValue"));

            if ('@Model.ExportType' == "01")
            {
                $("#head").text('商品情報エクスポート定義');
                $("#regi").removeClass('d-none');
            }
            else
            {
                $("#head").text('説明文エクスポート定義');
                $("#regi").removeClass('d-none');
            }

            if ('@Model.Mode' == "Edit") {
                ExportValue = $("#ExportValue").val();
                ExportValueID = $("#ExportValueID").val();
                ExpValueIDStr = $("#ExportValueID").val();
                exportValueIDArr = ExpValueIDStr.split(',');
                ExpValueStr = $("#ExportValue").val();
                exportValueArr = ExpValueStr.split(',');
                for (i = 0; i < exportValueIDArr.length; i++) {
                    var expObj = { ExpValueID: exportValueIDArr[i], ExpValue: exportValueArr[i] };
                    exportListarr.push(expObj);
                }

                $("#btnExportOrder").prop("disabled", false);
                //check radio based on Deleteflag
            if ('@Model.Status' == "有効")
                $("#rdostatus").attr('checked', true);
            else
                $("#rdostatus1").attr('checked', true);
            }
            //modal for exported column name
            $("#exportcolumnlistModal").iziModal({
                top: 30,
                width: "80%",
                overlayClose: false
            });

            //modal for exported order column name
            $("#ordercolumnlistModal").iziModal({
                top: 30,
                width: "50%",
                overlayClose: false
            });

            //to input for save confirm
            $("#btnSave").click(function () {
                var res = ErrorCheckOnClick('divExportEntry');
                if (res == "0") {
                 if ('@Model.Mode' == "New") {
                     $("#btnConfirm_Save").val("登録");
                      $("#reg_Confirm").removeClass('d-none');
                  }
                  else {
                      $("#btnConfirm_Save").val("確認");
                      $("#edi").removeClass('d-none');
                  }
                    $("#regi").addClass('d-none');
                    $("#btnPrevious").removeClass('d-none');
                    $("#btnSave").addClass('d-none');
                    $("#btnConfirm_Save").removeClass('d-none');
                    $("#btnback").addClass('d-none');
                    $('.userCmnSet :input').attr('disabled', true);
                    $("#btnConfirm_Save").focus();
                }
                else {
                    ShowMessage(res);
                }
            });

            $("#btnPrevious").click(function () {
                $("#edi").addClass('d-none');
                $("#regi").removeClass('d-none');
                $("#reg_Confirm").addClass('d-none');
                $("#btnSave").removeClass('d-none');
                $("#btnback").removeClass('d-none');
                $("#btnPrevious").addClass('d-none');
                $("#btnConfirm_Save").addClass('d-none');
                $('.userCmnSet :input').removeAttr('disabled', true);
                $("#ExportValue").prop("disabled", true);
            });

             // go to Export Field List
            $("#btnback").click(function(){
               window.location.href='@Url.Action("ExportFieldList","ExportField")';
            });

        });

        function ExportColumnClick() {
            $('#exportcolumnlistModal').iziModal('open');
        }

        function OrderColumnClick() {
            BindOrderColumn();
            $('#ordercolumnlistModal').iziModal('open');
        }

        function BindOrderColumn() {
            $("#tblOrderList tbody").html('');
            for (i = 0; i < exportListarr.length; i++) {
                //var row = '<tr><td>' + exportListarr[i].ExpValueID + '</td><td>' + exportListarr[i].ExpValue + '</td></tr>';
                var row = '<tr><td>' + exportListarr[i].ExpValue + '</td></tr>';
                $("#tblOrderList tbody").append(row);
            }
            sortable('#tblOrderList tbody', {
                items: "tr",
                forcePlaceholderSize: true,
                placeholderClass: 'ph-class',
            })
        }

        function CloseOrderModal() {
            $('#ordercolumnlistModal').iziModal('close');
        }

        function AddOrderColumn() {
            exportListarr = [];
            ExportValue = "";
            ExportValueID = "";
            $("#ExportValue").val('');
            $.each($("#tblOrderList > tbody > tr"), function () {
                if (ExportValue == "") {
                    //ExportValueID = this.cells[0].innerHTML;
                    ExportValue = this.cells[1].innerHTML;
                }
                else {
                    //ExportValueID += "," + this.cells[0].innerHTML;
                    ExportValue += "," + this.cells[1].innerHTML;
                }
                //var exportObj = { ExpValue: this.cells[1].innerHTML, ExpValueID: this.cells[0].innerHTML };
                var exportObj = { ExpValue: this.cells[1].innerHTML};
                exportListarr.push(exportObj);
            });

            $("#ExportValue").val(ExportValue);
            $('#ordercolumnlistModal').iziModal('close');
        }

        function ConfirmSave() {
            var exportFieldModel = {
                AutoID: '@Model.AutoID',
                Status: $("input[name='rbdStatus']:checked").val(),
                ExportName: $("#ExportName").val(),
                ExportType:'@Model.ExportType',
                CreatedBy: $("#lblUser").text(),
                UpdatedBy: $("#lblUser").text(),
                ExportValue: ExportValue,
                ExportValueID: ExportValueID,
                Mode:'@Model.Mode'
            };

            var result = CalltoApiController("/api/ExportFieldApi/ExportField_Save", exportFieldModel);
            if (result=="true") {
                ShowMessage("I101","SaveOK");
            }
            else {
                 $("#UserName").focus();
                ShowMessage("E001");
            }
        }

        function SaveOK() {
            window.location.href = '@Url.Action("ExportFieldList","ExportField")';
        }

    </script>
}


